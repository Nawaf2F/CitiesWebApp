// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.DbContexts;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    [Migration("20240122102747_SeedInitialData")]
    partial class SeedInitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApp.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Capital",
                            Name = "Riyadh"
                        },
                        new
                        {
                            Id = 2,
                            Description = "On the red Sea",
                            Name = "Jeddah"
                        },
                        new
                        {
                            Id = 3,
                            Description = "On the east",
                            Name = "Dammam"
                        },
                        new
                        {
                            Id = 4,
                            Description = "On the north",
                            Name = "Hail"
                        });
                });

            modelBuilder.Entity("WebApp.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("pointOfInterests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "A big tower",
                            Name = "Kingdom Tower"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "A good entertaining experience",
                            Name = "Boulivard World"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Description = "The biggest Fountain in the world",
                            Name = "King Fahad Fountain"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            Description = "Shopping place",
                            Name = "Red sea mall"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            Description = "An amazing beach",
                            Name = "Dammam beach"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 4,
                            Description = "Old castle",
                            Name = "Aaerf Castle"
                        });
                });

            modelBuilder.Entity("WebApp.Entities.PointOfInterest", b =>
                {
                    b.HasOne("WebApp.Entities.City", "City")
                        .WithMany("PointOfInterest")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("WebApp.Entities.City", b =>
                {
                    b.Navigation("PointOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
